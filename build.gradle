group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}

buildscript {
    ext.serenityCoreVersion = '3.3.1'
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath ("net.serenity-bdd:serenity-gradle-plugin:$serenityCoreVersion")
        classpath ("net.serenity-bdd:serenity-single-page-report:$serenityCoreVersion")
    }
}


defaultTasks 'clean', 'test', 'aggregate', 'sonarqube'
apply plugin: 'net.serenity-bdd.serenity-gradle-plugin'

ext {
    slf4jVersion = '1.7.7'
    junitVersion = '5.8.2'
    assertJVersion = '3.22.0'
    log4jVersion = '2.17.1'
    jsonSimpleVersion = '1.1.1'
    restAssured = '4.4.0'

}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

dependencies {
//    implementation ("net.serenity-bdd:serenity-core:${serenityCoreVersion}"){
//        exclude group: 'org.apache.groovy', module: 'groovy'
//    }
    implementation "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-junit5:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-cucumber:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-rest:${serenityCoreVersion}"

    implementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    implementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    implementation "org.assertj:assertj-core:${assertJVersion}"
    implementation "org.slf4j:slf4j-simple:${slf4jVersion}"

    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.1.0'

    implementation "co.com.devco.automation:automationDevcoLibrary:2.0.2"
    implementation "com.google.code.gson:gson:2.8.6"
    implementation "io.appium:java-client:8.3.0"



    testImplementation "org.hamcrest:hamcrest-core:1.3"
    testImplementation "org.assertj:assertj-core:${assertJVersion}"

}

test {
    testLogging.showStandardStreams = true
    maxParallelForks=3
    systemProperties System.getProperties()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
    maxParallelForks = 1
}

serenity {
    reports = ["single-page-html"]
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)