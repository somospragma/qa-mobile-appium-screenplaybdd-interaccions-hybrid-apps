group 'org.example'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('net.serenity-bdd:serenity-gradle-plugin:2.1.4')
    }
}

ext {
    serenityVersion = '2.1.4'
    serenityCucumberVersion = '1.9.51'
}

dependencies {
    implementation "co.com.devco.automation:automationDevcoLibrary:2.0.2"
    //implementation "com.qiip:test-automation-qiip-utils:1.7.2"
    // implementation "com.qiip:base-lib_2.12:1.1.2"
    implementation "com.google.code.gson:gson:2.8.6"
    implementation "io.appium:java-client:7.5.1"
    implementation "net.serenity-bdd:serenity-rest-assured:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay-rest:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-core:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-junit:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-cucumber:$rootProject.ext.serenityCucumberVersion"
    implementation "net.serenity-bdd:serenity-ensure:$rootProject.ext.serenityVersion"
    testImplementation "org.hamcrest:hamcrest-core:1.3"
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.14.0'
    testImplementation 'org.slf4j:slf4j-simple:1.7.30'

}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
    maxParallelForks = 1
}
test.finalizedBy(aggregate)